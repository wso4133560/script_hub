# 根据文件类型查找
只找文件
find . -type f
只找文件夹
find . -type d

# 根据文件权限来查找
find . -perm [文件权限]

# find可执行文件
find [文件夹] -executable -type f

# 在除dir0及子目录以外的目录下查找txt后缀文件
find ./ -path './dir0*' -a -prune -o -name '*.txt' -print

# 查找/etc/下名称中带有passwd的文件，查找一层。
find /etc -maxdepth 1 -name passwd

# 查找/etc/下名称中带有*.conf的文件，且只查找第二层
find /etc -maxdepth 2 -mindepth 2 -name *.conf

# 查找/mnt中十分钟左右修改的
find /mnt -cmin 10

# 查找/mnt中十分钟以上修改的
find /mnt -cmin +10

# 查找/mnt中十分钟以内修改的
find /mnt -cmin -10

# -ctime 是天, 同-cmin

# -exec，将查找到到的文件做以下操作
# 把/etc/目录下名称中带有.conf的文件递归复制到/mnt下
find /etc/ -name *.conf -exec cp -rp {} /mnt \;
##find: 遗漏“-exec”的参数 解决方案
例句： find /var/ -mtime +10 -name “*.tar.gz” -exec rm -rf {} ;
出现这个问题很有可能是：
1、{} 和 \ 之间有空格
2、\ 和 ; 之间没有空格！


# 删除find出来的文件
find . -iname '*.tmp' -delete

# find 使用正则
find . -regex '^/home/.*\.txt$'

# iregex 大小写敏感的正则

# 查找空文件夹或者空文件
find . -empty

# 查找有相同内容的文件
find . -samefile file1

# 查找PE32+类型的文件
#/bin/bash
pe32_plus="PE32\\+"
path=./
for File in `find $path`
do
	filetype=`file $File`
	echo $filetype|grep -E $pe32_plus>/dev/null 2>&1
	if [ $? -eq 0 ];then
		echo $filetype
fi
done

# 通过find来批量替换文件 PE32+替换成PE32
#/bin/bash
pe32_plus="PE32\\+"
path=./
r_path=../dotnet-sdk-5.0.210-win-x86/
for File in `find $path -name *.dll`
do
	filetype=`file $File`
	echo $filetype|grep -E $pe32_plus>/dev/null 2>&1
	if [ $? -eq 0 ];then
                r_file_path=""
		for r_File in `find $r_path -name ${File##*/}`
                do
		    r_file_path=$r_File
		    break
	        done
		`cp $r_file_path $File`
		echo $filetype
fi
done
